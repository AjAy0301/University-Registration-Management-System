/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UniversityRegistration;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Objects;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ajay.kumar
 */
public class StudentRegistration extends javax.swing.JFrame {

    /**
     * Creates new form StudentRegistration
     */
//    private int RegID;
    public StudentRegistration() {
        initComponents();
      
        jComboBranch.setSelectedIndex(-1);
        jComboYear.setSelectedIndex(-1);
//        C_table_update("CO","3"); // comment this out this is only for testing purpose
    }
    Connection con;
    PreparedStatement pst;
    
    Connection con2;
    PreparedStatement pst2;

    public StudentRegistration(String user) {
        //To change body of generated methods, choose Tools | Templates.
        
           initComponents();
           jrollno.setText(user);
           jrollno.setEnabled(false);
        jComboBranch.setSelectedIndex(-1);
        jComboYear.setSelectedIndex(-1);
    }
    public Connection MySqlConnection(){
        Connection conn=null;
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conn=DriverManager.getConnection("jdbc:mysql://localhost/UMS", "root", "");
            //JOptionPane.showMessageDialog(null, "Mysql DB Connection Successful...");
            return conn;
        } catch (ClassNotFoundException | SQLException e) {
            JOptionPane.showMessageDialog(null, "Mysql Connection Failed....");
            return null;
        }    
    }
      public void C_table_update(String branch_, String year_)  // update the course table on ui   // Called when the Submit button pressed on Personal Details column
      {
     
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con2 = DriverManager.getConnection("jdbc:mysql://localhost/UMS","root","");
            pst2 = con2.prepareStatement("select * from course where ( branch = ? OR branch = 'All' ) AND CourseYear = ?;");
            pst2.setString(1, branch_);// 1 represents first ?
            pst2.setString(2,year_);
            ResultSet rs2 = pst2.executeQuery();
//            ResultSetMetaData Rss = rs2.getMetaData();
//            int col= Rss.getColumnCount(); // maybe columns denotes the number of rows in the table
            
            DefaultTableModel Df= (DefaultTableModel)jTable1.getModel();  // import the package// jtable bame
            Df.setRowCount(0);

            while(rs2.next()){
                Vector v2 = new Vector();
                
                    v2.add(rs2.getString("id"));
                    v2.add(rs2.getString("name"));
                    v2.add(rs2.getString("branch"));
                    v2.add(rs2.getString("type"));
                    
                    v2.add(rs2.getString("credits"));
              
                Df.addRow(v2);
            }

                        
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(StudentRegisterCourses.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this,"Error in updating Course Tables from function c_table_update");
        }
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jrollno = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jname = new javax.swing.JTextField();
        jphone = new javax.swing.JTextField();
        jemail = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaAddress = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jComboBranch = new javax.swing.JComboBox<>();
        jComboYear = new javax.swing.JComboBox<>();
        jRadioButtonMale = new javax.swing.JRadioButton();
        jRadioButtonFemale = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        selectedCourseID = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        NumCourse = new javax.swing.JTextField();
        numCredits = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 153));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("UNIVERSITY REGISTRATION MANAGEMENT SYSTEM");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(178, 178, 178)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 204));
        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setForeground(new java.awt.Color(255, 204, 102));

        jPanel4.setBackground(new java.awt.Color(255, 241, 222));
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel4.setText("PERSONAL DETAILS");

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setText("ROLL NO");

        jrollno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrollnoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel7.setText("NAME");

        jTextAreaAddress.setColumns(20);
        jTextAreaAddress.setRows(5);
        jScrollPane3.setViewportView(jTextAreaAddress);

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel8.setText("BRANCH");

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel9.setText("EMAIL");

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel10.setText("YEAR");

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel12.setText("PHONE");

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel13.setText("ADDRESS");

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel14.setText("GENDER");

        jComboBranch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AE", "BT", "CO", "IT", "SE", "ME", "ECE", " ", " ", " " }));
        jComboBranch.setSelectedIndex(-1);
        jComboBranch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBranchActionPerformed(evt);
            }
        });

        jComboYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));
        jComboYear.setSelectedIndex(-1);
        jComboYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboYearActionPerformed(evt);
            }
        });

        jRadioButtonMale.setText("Male");
        jRadioButtonMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMaleActionPerformed(evt);
            }
        });

        jRadioButtonFemale.setText("Female");
        jRadioButtonFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonFemaleActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 204, 0));
        jButton1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("SUBMIT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 0, 0));
        jButton2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("CLEAR");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jRadioButtonMale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButtonFemale)
                                .addGap(10, 10, 10))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboYear, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBranch, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jemail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                .addComponent(jphone, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jname, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jrollno, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel4)
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jrollno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jComboBranch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jComboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jphone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jemail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(24, 24, 24)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jRadioButtonMale)
                    .addComponent(jRadioButtonFemale))
                .addGap(28, 28, 28)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 241, 222));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "COURSE ID", "COURSE NAME", "BRANCH", "TYPE", "CREDITS"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel3.setText("LIST OF AVAILABLE COURSES FOR YOUR BRANCH ");

        jPanel6.setBackground(new java.awt.Color(204, 255, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("SELECT COURSE"));

        jLabel11.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel11.setText("COURSE ID");

        jButton3.setBackground(new java.awt.Color(153, 153, 0));
        jButton3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("VIEW");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 102, 0));
        jButton4.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("ADD");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(153, 0, 0));
        jButton5.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("DROP");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel15.setText("Number of Course Selected");

        jLabel16.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel16.setText("Total Credits Selected");

        NumCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(57, 57, 57)
                        .addComponent(selectedCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(213, 213, 213)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(NumCourse, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                    .addComponent(numCredits))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NumCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(selectedCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel15)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4)
                        .addComponent(jButton5)
                        .addComponent(jButton3))
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(numCredits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 241, 222));
        jPanel5.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course ID", "Course Name", "Type", "Credits"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jLabel6.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel6.setText("REGISTERED COURSES");

        jButton6.setBackground(new java.awt.Color(0, 153, 0));
        jButton6.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("SUBMIT");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel17.setText("You can select a maximum of 6 courses and a minimum of 5 courses.");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6)
                        .addGap(28, 28, 28))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(188, 188, 188))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jLabel17))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setBackground(new java.awt.Color(145, 86, 30));
        jLabel2.setFont(new java.awt.Font("Lucida Grande", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("STUDENT COURSE REGISTRATION");
        jLabel2.setOpaque(true);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String roll=jrollno.getText();
       
        //        JOptionPane.showMessageDialog(this,"Reached Validity CHECKS");
          
        try {
            
              Class.forName("com.mysql.jdbc.Driver");
              con = DriverManager.getConnection("jdbc:mysql://localhost/UMS","root","");
            

              // ======================  validity checks =========================================
                if(roll.length()==0){
               JOptionPane.showMessageDialog(this,"roll number cannot be left empty");
               jrollno.setText("");
               return;
                    }
             // check if a transaction already exits corresponding to a particular student ID
             pst=con.prepareStatement("select * from students where ID=?;");
             pst.setString(1,roll);
             ResultSet isUser=pst.executeQuery();
             if(isUser.next()){
                 // a user already exists
                 jComboBranch.setSelectedItem(isUser.getString("Branch"));
                 jComboYear.setSelectedItem(isUser.getString("Year"));
                  String branch=jComboBranch.getSelectedItem().toString();
                    String year=jComboYear.getSelectedItem().toString();
                    
                    jname.setText(isUser.getString("Name"));
                     jphone.setText(isUser.getString("Phone"));
                     jemail.setText(isUser.getString("email"));
                        String gender=isUser.getString("Gender");
                        if(gender.equals("Male"))
                        {
                            jRadioButtonFemale.setSelected(false);
                            jRadioButtonMale.setSelected(true);
                        }else{
                              jRadioButtonFemale.setSelected(true);
                            jRadioButtonMale.setSelected(false);
                        }
                     jTextAreaAddress.setText(isUser.getString("Address"));
                    
                    
                 JOptionPane.showMessageDialog(this,"You have already registered before.You can still change your courses provided on the availability of seats");
                 C_table_update(branch,year);
                 update_course_credit_count_and_table();
                 return;
             }
             
              String name=jname.getText();
              if(name.length()==0)
        {
            JOptionPane.showMessageDialog(this,"name cannot be left empty");
            jname.setText("");
            return;
        }
              if(jComboBranch.getSelectedItem()==null){
                  JOptionPane.showMessageDialog(this,"Please select Branch");
                  return;
              }
        String branch=jComboBranch.getSelectedItem().toString();
        if(jComboYear.getSelectedItem()==null){
                  JOptionPane.showMessageDialog(this,"Please select Year");
              }
        String year=jComboYear.getSelectedItem().toString();
        String phone=jphone.getText();
        
        String email=jemail.getText();
        String gender="Male";
        String address=jTextAreaAddress.getText();
//             pst.close();
        // name check
        
        if(phone.length()==0)
        {
            JOptionPane.showMessageDialog(this,"phone number cant be left empty");
            jphone.setText("");
            return;
        }
        if(phone.length()>10 || phone.length()<10 ){
            JOptionPane.showMessageDialog(this,"Phone number must be 10 digits only");
             jphone.setText("");
             return;
        }
        
    //        boolean isPhoneCorrect = true;
        if(jRadioButtonMale.isSelected()){
            gender = "Male";
        }
        else{
            if(jRadioButtonFemale.isSelected())
                gender = "Female";
            else{
                JOptionPane.showMessageDialog(this,"Select your gender");
                return;
            }
        }
       for(int i=0;i<phone.length();i++)
        { if(phone.charAt(i) < '0' || phone.charAt(i) >'9')
            {
                 JOptionPane.showMessageDialog(this,"Phone number must be a number only");
                  jphone.setText("");
                  return;

            }
        }
       // email check
       
       boolean hasAttherate=false;
       boolean hascom=false;
       int counts_beforeEmail=0;
       for(int i=0;i<email.length();i++)
       { 
           if(email.charAt(i)=='@')
           { hasAttherate=true;
              String check="";
              i++;
              while(i<email.length()) check+=email.charAt(i++);
              if(check.equals("gmail.com") || check.equals("yahoo.co.in"))
                  hascom=true;
            break;}
           counts_beforeEmail++;
           
       }
      if(!hasAttherate){
          JOptionPane.showMessageDialog(this,"Email should have an @ symbol");
           return;      
      }
      if(!hascom){
          JOptionPane.showMessageDialog(this,"Email should have a gmail.com or yahoo.co.in");
           return;      
      }
      if(counts_beforeEmail==0){
          JOptionPane.showMessageDialog(this,"Email should have a character before @ symbol");
           return;      
      }
      update_course_credit_count_and_table();
             
             
              // ========final submission == add the columns to table by making connection ===================
             
           
            pst = con.prepareStatement("INSERT INTO `students` (`ID`, `Name`, `Phone`, `email`, `Gender`, `Branch`, `Year`, `Address`) VALUES (?, ?,?,?, ?, ?, ?, ?);");
            pst.setString(1, roll);
            pst.setString(2, name);// 1 represents first ?
            pst.setString(3, phone);
            pst.setString(4, email);
            pst.setString(5, gender);
            pst.setString(6, branch);
            pst.setString(7, year);
            pst.setString(8, address);
            pst.executeUpdate();
            con.close();
            C_table_update(branch,year);
            JOptionPane.showMessageDialog(this,"Details entered. Now you can check the courses available for your branch and year");
            jrollno.setEnabled(false); // so that they can be used to add courses
            jname.setEnabled(false);
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButtonFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonFemaleActionPerformed
        // TODO add your handling code here:
        if(jRadioButtonMale.isSelected())
        jRadioButtonMale.setSelected(false);
    }//GEN-LAST:event_jRadioButtonFemaleActionPerformed

    private void jRadioButtonMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMaleActionPerformed
        // TODO add your handling code here:
        if(jRadioButtonFemale.isSelected())
//        jRadioButtonFemale.setEnabled(false);
            jRadioButtonFemale.setSelected(false);
    }//GEN-LAST:event_jRadioButtonMaleActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
         jrollno.setText("");
        jname.setText("");
       jComboBranch.setSelectedIndex(-1);
       jComboYear.setSelectedIndex(-1);
       jphone.setText("");
       jemail.setText("");

       jTextAreaAddress.setText("");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        
        String courseID= selectedCourseID.getText();
        if(courseID.length()==0){
             JOptionPane.showMessageDialog(null, "No course selected");
             return;
        }
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/UMS","root","");
            pst = con.prepareStatement("select * from `course` where ID = ?;");
             pst.setString(1, courseID);
             ResultSet ans=pst.executeQuery();
             if(!ans.next()){
                  JOptionPane.showMessageDialog(null, "Enter a valid Course ID");
                  return;
             }
//             ans.next();
             String courseDetails="";
             courseDetails+="COURSE ID :   ";
             courseDetails+=ans.getString("ID")+"                                         \n";
             
             courseDetails+="NAME :         ";
             courseDetails+=ans.getString("name")+"\n";
             
             courseDetails+="BRANCH :       ";
             courseDetails+=ans.getString("Branch")+"\n";
             
             courseDetails+="TYPE :         ";
             courseDetails+=ans.getString("Type")+"\n";
             
             courseDetails+="COURSE YEAR :  ";
             courseDetails+=ans.getString("CourseYear")+"\n";
             
             courseDetails+="CREDITS :       ";
             courseDetails+=ans.getString("Credits")+"\n";
             
//             courseDetails+="TOTAL SEATS :   ";
//             courseDetails+=ans.getString("TotalSeats")+"\n";
//            
//             
//             courseDetails+="FILLED :        ";
//             courseDetails+=ans.getString("Filled")+"\n";
//             
//             courseDetails+="AVAILABLE :     ";
//             courseDetails+=ans.getString("availble")+"\n";
             
             courseDetails+="Course Incharge: ";
             courseDetails+=ans.getString("Incharge")+"\n";
             
             courseDetails+="Description :    ";
             courseDetails+=ans.getString("Description")+"\n";
             
              JOptionPane.showMessageDialog(null, courseDetails);
             
         
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
              
            
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void NumCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumCourseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NumCourseActionPerformed
    private void  update_course_credit_count_and_table()
    {
//        int credit_count= 
                // select count(*) from Registrations where StudentID=?   //group by StudentID;   group by is not needed i suppose
//                 select sum(course.credits) from course,Registrations where course.ID=Registrations.CourseID and student.id= group by Registration.StudentID;
//        Select sum(credits) as CreditSum from Registrations as T, course as C where T.StudentID='2k18/SE/003' and T.CourseID=C.ID;
        
        String courseID= selectedCourseID.getText();
//        if(courseID.length()==0){
//             JOptionPane.showMessageDialog(null, "No course selected");
//             return;
//        }
        
          try {
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/UMS","root","");
                
                String roll=jrollno.getText();
               // Credits Count
                 pst = con.prepareStatement(" Select sum(credits) as CreditSum from Registrations as T, course as C where T.StudentID=? and T.CourseID=C.ID;");
                 pst.setString(1, roll);
                 ResultSet ans=pst.executeQuery();
                    if(ans.next()){
                        String credit_count=ans.getString("CreditSum");
                        numCredits.setText(credit_count);
                    };
//                 pst.close();
//                 ans.close();
                 
                 
              // Number of Courses Count
                 pst = con.prepareStatement("  select count(*) as CourseCount from Registrations where StudentID=? ;");
                 pst.setString(1, jrollno.getText());
                  ResultSet ans2=pst.executeQuery();                 
                  if(ans2.next()){
                    int course_count=ans2.getInt("CourseCount");
//                    NumCourse.setText(Integer.toString(course_count));
                        NumCourse.setText(String.valueOf(course_count));
//                    JOptionPane.showMessageDialog(this,ans2.getInt("CourseCount"));
                    };
                  
                
             // Updating the Registered Course Table
              
                
                
                pst = con.prepareStatement("select CourseID,Name,type, Credits from  `Registrations`,`course` where StudentID=? and CourseID=ID ;");
                 pst.setString(1, roll);
                   ResultSet results = pst.executeQuery();
//                    ResultSetMetaData Rss = results.getMetaData();
//                    int col= Rss.getColumnCount(); // maybe columns denotes the number of rows in the table

                    DefaultTableModel Df2= (DefaultTableModel)jTable2.getModel();  // import the package// jtable bame
                        Df2.setRowCount(0);
                    while(results.next())
                    {
                         Vector v2 = new Vector();

                        v2.add(results.getString("CourseID"));
                        v2.add(results.getString("Name"));
                        v2.add(results.getString("type"));
                         v2.add(results.getString("Credits"));
                    Df2.addRow(v2);
                    }
//                    pst.close();
                
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        // ========================================           ADD BUTTON .    ========================================
        String courseID= selectedCourseID.getText();
        if(courseID.length()==0){
             JOptionPane.showMessageDialog(null, "No course selected");
             return;
        }
        
          try {
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/UMS","root","");
                
                // checking if a valid course is selected from the course table, i.e. random value not added
                pst = con.prepareStatement("select * from `course` where ID = ?;");
                 pst.setString(1, courseID);
                 ResultSet ans=pst.executeQuery();
             if(!ans.next()){
                  JOptionPane.showMessageDialog(null, "Enter a valid Course ID");
                  return;
             }
//             pst.close();
            
             // checking if the selected course is already added in registrations before
                String roll=jrollno.getText();
              
                pst = con.prepareStatement("select * from  `Registrations` where StudentID=? and CourseID=?;");
                pst.setString(1, roll);
                pst.setString(2, courseID);
               ResultSet isTransaction= pst.executeQuery();
                if(isTransaction.next()) {
                    JOptionPane.showMessageDialog(null, "Course is already Registered");
                  return;
                }
//                pst.close();
//                isTransaction.close();
                
                
                // else if course is not registered previously then go and make a new transaction in registration table
             // Now again making connections for the other table
//             Class.forName("com.mysql.jdbc.Driver");
//                con = DriverManager.getConnection("jdbc:mysql://localhost/UMS","root","");
//                String roll2=jrollno.getText();


                // Validity Check ==  Number of Couurses should not be more than 7 // before inserting check if the number of courses are as specified
              
                 pst = con.prepareStatement("  select count(*) as CourseCount from Registrations where StudentID=? ;");
                 pst.setString(1, jrollno.getText());
                 ResultSet ans2=pst.executeQuery();                 
                  if(ans2.next()){
                    int course_count=ans2.getInt("CourseCount");
//                    NumCourse.setText(Integer.toString(course_count));
//                        NumCourse.setText(String.valueOf(course_count));
                    if(course_count==6){
                        JOptionPane.showMessageDialog(this,"You can register for only a maximum of 6 courses");
                        return;
                        }
                    // else just jo and insert a transaction/ registration
                    };
                 
                pst = con.prepareStatement("INSERT INTO `Registrations` ( `StudentID`, `CourseID`) VALUES (?, ?);");
                pst.setString(1, roll);
                pst.setString(2, courseID);
                pst.executeUpdate();
                update_course_credit_count_and_table();
//                pst.close();
//             ans.next();
         
             
         
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jComboBranchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBranchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBranchActionPerformed
    
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
       
        int idx = jTable1.getSelectedRow();
//       JOptionPane.showMessageDialog(this, idx);
        try {
             Connection con3=MySqlConnection();
//            Vector v3 = new Vector();
             pst = con3.prepareStatement("select * from course where ( branch = ? OR branch = 'All' ) AND CourseYear = ?;");
             pst.setString(1,jComboBranch.getSelectedItem().toString());
             pst.setString(2,jComboYear.getSelectedItem().toString());
            ResultSet rs = pst.executeQuery();
            for(int i=0;i<=idx;i++)
                rs.next();
           selectedCourseID.setText(rs.getString("ID"));
        } catch (SQLException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
                   
               
        
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
       if(jrollno.getText().length()==0){
           this.hide();
           return;
       }
        try {
            // Final Submit Button
            pst = con.prepareStatement("  select count(*) as CourseCount from Registrations where StudentID=? ;");
             pst.setString(1, jrollno.getText());
                 ResultSet ans2=pst.executeQuery();                 
                  if(ans2.next()){
                    int course_count=ans2.getInt("CourseCount");
//                    NumCourse.setText(Integer.toString(course_count));
//                        NumCourse.setText(String.valueOf(course_count));
                    if(course_count<5){
                        JOptionPane.showMessageDialog(this,"You have to register for a minimum of 5 courses");
                        return;
                        }
                    // else just jo and insert a transaction/ registration
                    };
                    
                    
                    // checking if all compulsory courses have been selected or not
                    
                     Class.forName("com.mysql.jdbc.Driver");
                        con2 = DriverManager.getConnection("jdbc:mysql://localhost/UMS","root","");
                        pst2 = con2.prepareStatement("select count(*) as Sum from course where ( branch = ? OR branch = 'All' ) AND CourseYear = ? and type=? ;");
                        pst2.setString(1, jComboBranch.getSelectedItem().toString());// 1 represents first ?
                        pst2.setString(2,jComboYear.getSelectedItem().toString());
                        pst2.setString(3,"COMPULSORY");
                        
                        ResultSet rs2 = pst2.executeQuery();
                        if(rs2.next()){
                            Integer compulsory_count=Integer.parseInt(rs2.getString("Sum"));
                            
                            pst2 = con.prepareStatement("select count(*) as Sum2 from  `Registrations`,`course` where StudentID=? and CourseID=ID and Type=?;");
                            pst2.setString(1, jrollno.getText());
                            pst2.setString(2, "COMPULSORY");
                            ResultSet results = pst2.executeQuery();
                            Integer compulsory_count2=-1;
                            if(results.next()){
                               compulsory_count2=Integer.parseInt(results.getString("Sum2"));
                            }
                            if(!Objects.equals(compulsory_count, compulsory_count2)){
                                JOptionPane.showMessageDialog(this,"You have to select all the compulsory courses of your department");
                                return;
                            }
                            
                        }
                        
                    // 
                    
                    JOptionPane.showMessageDialog(this,"You have registered Successfully");
                    
                    this.setVisible(false);
        
                    Login lgn=new Login();
                    lgn.setVisible(true);
                    
        } catch (SQLException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
         int idx = jTable2.getSelectedRow();
//       JOptionPane.showMessageDialog(this, idx);
        try {
             Connection con3=MySqlConnection();
//            Vector v3 = new Vector();

//             pst = con3.prepareStatement("select * from course where ( branch = ? OR branch = 'All' ) AND CourseYear = ?;");
//             pst.setString(1,jComboBranch.getSelectedItem().toString());
//             pst.setString(2,jComboYear.getSelectedItem().toString());
                  pst = con3.prepareStatement("select CourseID,Name,type, Credits from  `Registrations`,`course` where StudentID=? and CourseID=ID ;"); // this statement is used to update the Registered Courses table
                 pst.setString(1, jrollno.getText());
                   ResultSet rs = pst.executeQuery();
             
         
            for(int i=0;i<=idx;i++)
                rs.next();
           selectedCourseID.setText(rs.getString("CourseID"));
        } catch (SQLException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
       // DROP the Course
       
        String courseID= selectedCourseID.getText();
        if(courseID.length()==0){
             JOptionPane.showMessageDialog(null, "No course selected");
             return;
        }
        
          try {
                Class.forName("com.mysql.jdbc.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/UMS","root","");
                
                // checking if a valid course is selected from the course table, i.e. random value not added
                pst = con.prepareStatement("select * from `course` where ID = ?;");
                 pst.setString(1, courseID);
                 ResultSet ans=pst.executeQuery();
             if(!ans.next()){
                  JOptionPane.showMessageDialog(null, "Enter a valid Course ID");
                  return;
             }
//             pst.close();
            
             // checking if the selected course is already added in registrations before
                String roll=jrollno.getText();
              
                pst = con.prepareStatement("select * from  `Registrations` where StudentID=? and CourseID=?;");
                pst.setString(1, roll);
                pst.setString(2, courseID);
               ResultSet isTransaction= pst.executeQuery();
                if(isTransaction.next()) {
                    // This means course is registered in the transaction table
                           pst = con.prepareStatement("DELETE FROM `Registrations` WHERE StudentID=? AND CourseID=?;");
                            pst.setString(1, roll);
                            pst.setString(2, courseID);
                            pst.executeUpdate();
                            update_course_credit_count_and_table();
                    JOptionPane.showMessageDialog(null, "Course Dropped");
                  return;
                }
                
         JOptionPane.showMessageDialog(this,"You have not registered for this course");
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(StudentRegistration.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jComboYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboYearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboYearActionPerformed

    private void jrollnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrollnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrollnoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentRegistration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentRegistration().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField NumCourse;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox<String> jComboBranch;
    private javax.swing.JComboBox<String> jComboYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButtonFemale;
    private javax.swing.JRadioButton jRadioButtonMale;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextAreaAddress;
    private javax.swing.JTextField jemail;
    private javax.swing.JTextField jname;
    private javax.swing.JTextField jphone;
    private javax.swing.JTextField jrollno;
    private javax.swing.JTextField numCredits;
    private javax.swing.JTextField selectedCourseID;
    // End of variables declaration//GEN-END:variables
}
